<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cloud Architect on Marc Guyer</title><link>//marc.guyer.me/</link><description>Recent content in Cloud Architect on Marc Guyer</description><generator>Hugo</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 15 May 2025 21:16:19 -0400</lastBuildDate><atom:link href="//marc.guyer.me/index.xml" rel="self" type="application/rss+xml"/><item><title>Building Multi-Architecture AWS Lambda Functions with Bref PHP and PostgreSQL</title><link>//marc.guyer.me/posts/bref-php-pdo-postgresql-multi-architecture-example/</link><pubDate>Wed, 15 May 2024 12:00:00 -0400</pubDate><guid>//marc.guyer.me/posts/bref-php-pdo-postgresql-multi-architecture-example/</guid><description>&lt;h2 id="the-multi-architecture-challenge">The Multi-Architecture Challenge&lt;/h2>
&lt;p>With the rise of Apple Silicon (ARM64) and the continued use of Intel-based (x86_64) systems, developers face increasing challenges in creating applications that work seamlessly across both architectures. This is especially true for PHP developers working with AWS Lambda, where subtle differences can lead to frustrating issues.&lt;/p>
&lt;p>In the PHP ecosystem, one particular pain point has been connecting to PostgreSQL databases from Lambda functions. The variations in how PDO PostgreSQL extension loading works across architectures has been a source of confusion for many developers.&lt;/p></description></item><item><title>Mezzio Example: Testing Doctrine Entities and Repositories</title><link>//marc.guyer.me/posts/mezzio-example/testing-doctrine-entities-and-repositories/</link><pubDate>Thu, 16 Sep 2021 16:25:49 -0500</pubDate><guid>//marc.guyer.me/posts/mezzio-example/testing-doctrine-entities-and-repositories/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>In this post, we&amp;rsquo;ll see how to create a comprehensive testing framework for Doctrine Entities and Repositories. This is a continuation of our &lt;a href="//marc.guyer.me/posts/mezzio-example/doctrine-entities-and-repositories/">Mezzio Example series&lt;/a> where we previously created our domain model for an OAuth2-enabled application.&lt;/p>
&lt;p>Let&amp;rsquo;s make sure our Entities and Repositories have full test coverage. The domain model is a significant part of any dynamic application so the code should be in good shape. We don&amp;rsquo;t want any bugs here.&lt;/p></description></item><item><title>Mezzio Example: Doctrine Entities and Repositories</title><link>//marc.guyer.me/posts/mezzio-example/doctrine-entities-and-repositories/</link><pubDate>Wed, 15 Sep 2021 16:25:49 -0500</pubDate><guid>//marc.guyer.me/posts/mezzio-example/doctrine-entities-and-repositories/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This post brings several pieces of supporting libraries together.&lt;/p>
&lt;h3 id="entities-to-support-oauth2-requirements">Entities to Support OAuth2 Requirements&lt;/h3>
&lt;p>We&amp;rsquo;ll start by defining a minimum domain model via PHP8 Attributes and Doctrine&amp;rsquo;s new attribute mapping driver. In the short-term, we only need to model what&amp;rsquo;s necessary for our application&amp;rsquo;s authentication layer using OAuth2. For now, we&amp;rsquo;re creating a minimal set of objects to comply with the needs of our supporting libraries&amp;rsquo; interfaces. We need a minimum of 6 entities and their corresponding repositories:&lt;/p></description></item><item><title>Mezzio Example: Psalm Introduction</title><link>//marc.guyer.me/posts/mezzio-example/psalm-introduction/</link><pubDate>Wed, 15 Sep 2021 14:28:49 -0500</pubDate><guid>//marc.guyer.me/posts/mezzio-example/psalm-introduction/</guid><description>&lt;h2 id="what-is-psalm">What is Psalm?&lt;/h2>
&lt;p>&lt;a href="https://psalm.dev">Psalm&lt;/a> is a static analysis tool for PHP that helps you identify problems with your code. If you use it, you&amp;rsquo;ll become a better coder. I promise.&lt;/p>
&lt;h3 id="learn-more-about-psalm">Learn more about Psalm&lt;/h3>
&lt;p>Here&amp;rsquo;s a great read &amp;ndash; the story of the origins of Psalm at Vimeo and the value it provided the team.&lt;/p>
&lt;p>&lt;a href="https://psalm.dev/articles/fixing-code-that-aint-broken">https://psalm.dev/articles/fixing-code-that-aint-broken&lt;/a>&lt;/p>
&lt;p>In this post, I&amp;rsquo;ll show a basic setup for static analysis with Psalm in Mezzio applications.&lt;/p></description></item><item><title>Contact</title><link>//marc.guyer.me/contact/</link><pubDate>Sun, 24 Jan 2021 09:42:49 -0400</pubDate><guid>//marc.guyer.me/contact/</guid><description>&lt;p>Ask me anything about your project - 
&lt;style>
 #span-c49dd3b9.cloaked-e-mail:before {
 content:attr(data-domain) "\0040" attr(data-user);
 unicode-bidi:bidi-override;
 direction:rtl;
 }
&lt;/style>
&amp;#32;&lt;span class="cloaked-e-mail" data-user="cram" data-domain="em.reyug" id="span-c49dd3b9">&lt;/span>&amp;#32;

&lt;script id="script-c49dd3b9">
 var scriptTag = document.getElementById("script-c49dd3b9");
 var link = document.createElement("a");
 var address = "cram".split('').reverse().join('') + "@" + "em.reyug".split('').reverse().join('');
 link.href = "mailto" + ":" + address;
 
 link.innerText = address.split('?')[0];
 
 
 scriptTag.parentElement.insertBefore(link, scriptTag.previousElementSibling);
 scriptTag.parentElement.removeChild(scriptTag.previousElementSibling)
&lt;/script>

&lt;/p></description></item><item><title>Mezzio Example: Functional and Unit Testing</title><link>//marc.guyer.me/posts/mezzio-example/functional-and-unit-testing/</link><pubDate>Sun, 01 Dec 2019 14:28:49 -0500</pubDate><guid>//marc.guyer.me/posts/mezzio-example/functional-and-unit-testing/</guid><description>&lt;h2 id="where-do-we-start">Where do we start?&lt;/h2>
&lt;p>It&amp;rsquo;s a good choice to start any application with a solid structure for testing the application with automated testing tools. That&amp;rsquo;s why the first post in this series is about testing. Any well-tested application will typically have more lines of testing code than actual application code. Starting with a good structure for testing will pay dividends down the road.&lt;/p>
&lt;p>In this post, I&amp;rsquo;ll show a basic setup for testing Mezzio applications. We&amp;rsquo;ll get to some more advanced testing topics in later posts.&lt;/p></description></item><item><title>Mezzio Example: Introduction</title><link>//marc.guyer.me/posts/mezzio-example/introduction/</link><pubDate>Mon, 04 Nov 2019 15:08:36 -0400</pubDate><guid>//marc.guyer.me/posts/mezzio-example/introduction/</guid><description>&lt;h2 id="what-is-this">What is this?&lt;/h2>
&lt;p>Let&amp;rsquo;s create a REST API with &lt;a href="https://docs.mezzio.dev/">Mezzio&lt;/a>. In this series, you&amp;rsquo;ll learn how to create a REST API from the ground up. We&amp;rsquo;ll use Mezzio as the base framework, Doctrine for the data layer, OAuth2 for authentication and authorization, PHPUnit for automated testing, and several other libraries along the way.&lt;/p>
&lt;h2 id="source-code">Source Code&lt;/h2>
&lt;p>I&amp;rsquo;ve created a new bare-bones application starting with the &lt;a href="https://github.com/mezzio/mezzio-skeleton">Mezzio Skeleton Application&lt;/a> where all the code shown in this series lives. You can install it in your local environment and hack on it all you want. You&amp;rsquo;re also welcome to contribute to the example application via PR. Check it out here:&lt;/p></description></item><item><title>Example Recovery Procedure for MySQL Backup Made with Xtrabackup</title><link>//marc.guyer.me/posts/example-recovery-procedure-for-mysql-backup-made-with-xtrabackup/</link><pubDate>Tue, 24 Sep 2019 17:09:56 -0400</pubDate><guid>//marc.guyer.me/posts/example-recovery-procedure-for-mysql-backup-made-with-xtrabackup/</guid><description>&lt;p>We have a pre-existing procedure for backing up a MySQL database using hot backups with the wonderful &lt;a href="https://www.percona.com/doc/percona-xtrabackup/2.4/index.html">Percona Xtrabackup&lt;/a> and in this case the deprecated &lt;a href="https://www.percona.com/doc/percona-xtrabackup/2.4/innobackupex/innobackupex_option_reference.html">innobackupex&lt;/a> binary.&lt;/p>
&lt;p>Xtrabackup is nice since it creates a clean backup of InnoDB, XtraDB, and MyISAM tables quickly and &lt;em>without locking&lt;/em>. There are countless useful features including point-in-time recovery, incremental backups, single table recovery, single partition recovery, I/O throttling, parallel processing, encryption, compression, streaming, and more.&lt;/p>
&lt;p>&lt;strong>A basic recovery procedure document was needed so I wrote one. Here is is.&lt;/strong>&lt;/p></description></item><item><title>About</title><link>//marc.guyer.me/about/</link><pubDate>Sat, 03 Aug 2019 09:42:49 -0400</pubDate><guid>//marc.guyer.me/about/</guid><description>&lt;h2 id="personal">Personal&lt;/h2>
&lt;p>I have interests, it&amp;rsquo;s true. In no particular order, here are a few:&lt;/p>
&lt;ul>
&lt;li>Solving problems&lt;/li>
&lt;li>Flying - currently licensed with a single-engine land class rating&lt;/li>
&lt;li>Playing golf&lt;/li>
&lt;li>Solving problems&lt;/li>
&lt;li>Sleeping&lt;/li>
&lt;li>Waking up&lt;/li>
&lt;li>Solving problems&lt;/li>
&lt;/ul>
&lt;p>I live in downtown Bloomington, Indiana, with &lt;a href="https://www.kategalvin.com/">Kate&lt;/a> and &lt;em>JEFF!&lt;/em>.&lt;/p>
&lt;h2 id="professional">Professional&lt;/h2>
&lt;h3 id="the-past">The Past&lt;/h3>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
 &lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/2IPAOxrH7Ro?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video">&lt;/iframe>
 &lt;/div>

&lt;p>Way back in the year 2000, I cofounded &lt;a href="http://resiteit.com/">Resite Information Technology&lt;/a>. Amazingly as of this writing, that site remains up. After selling the company in 2007, the name was changed to &lt;a href="http://www.resiteonline.com/">Resite Online&lt;/a>. That&amp;rsquo;s right, &amp;ldquo;online.&amp;rdquo;&lt;/p></description></item></channel></rss>